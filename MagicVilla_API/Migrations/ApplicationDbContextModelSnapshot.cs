// <auto-generated />
using System;
using MagicVilla_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVilla_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVilla_API.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "",
                            CreatedDate = new DateTime(2023, 11, 21, 19, 23, 47, 574, DateTimeKind.Local).AddTicks(3828),
                            Details = "Deniz kıyısında harika manzaralı bir ev.",
                            ImageUrl = "https://cf.bstatic.com/xdata/images/hotel/max1024x768/225614958.jpg?k=e08cf4fc133be2c8acb6e5715547f622da895c5260a2d70bcc67ee359e13feb2&o=&hp=1",
                            Name = "Royal Villa",
                            Occupancy = 5,
                            Rate = 200.0,
                            Sqft = 550,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "",
                            CreatedDate = new DateTime(2023, 11, 21, 19, 23, 47, 574, DateTimeKind.Local).AddTicks(3843),
                            Details = "Şekerden yapılmış bir ev.",
                            ImageUrl = "https://static.dezeen.com/uploads/2016/07/house-over-water-corey-papadopoli-slide_dezeen_1568_6.jpg",
                            Name = "Candy Villa",
                            Occupancy = 3,
                            Rate = 300.0,
                            Sqft = 500,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "",
                            CreatedDate = new DateTime(2023, 11, 21, 19, 23, 47, 574, DateTimeKind.Local).AddTicks(3844),
                            Details = "Güneş alan güzel bir ev.",
                            ImageUrl = "https://loveincorporated.blob.core.windows.net/contentimages/gallery/77da60a9-8492-47f5-b6f1-280017292bfa-12-incredible-homes-by-the-sea--british-virgin-islands.jpg",
                            Name = "Sunny Villa",
                            Occupancy = 2,
                            Rate = 450.0,
                            Sqft = 700,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Amenity = "",
                            CreatedDate = new DateTime(2023, 11, 21, 19, 23, 47, 574, DateTimeKind.Local).AddTicks(3846),
                            Details = "Elmas gibi parlayan, çok şık, güzel bir ev.",
                            ImageUrl = "https://loveincorporated.blob.core.windows.net/contentimages/gallery/77da60a9-8492-47f5-b6f1-280017292bfa-12-incredible-homes-by-the-sea--british-virgin-islands.jpg",
                            Name = "Diamond Villa",
                            Occupancy = 5,
                            Rate = 650.0,
                            Sqft = 900,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
